apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  # "namespace" omitted since ClusterRoles are not namespaced
  name: ns-role
rules:
- apiGroups: [""]
  resources: ["namespaces", "serviceaccounts"]
  verbs: ["*"]
- apiGroups: ["triggers.tekton.dev"]
  resources: ["clustertriggerbindings", "clusterinterceptors", "eventlisteners", "triggerbindings", "triggertemplates", "triggers", "eventlisteners/finalizers"]
  verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["clusterroles", "clusterrolebindings", "roles", "rolebindings"]
  verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]  
---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ns-role-binding
subjects:
  - kind: User
    apiGroup: rbac.authorization.k8s.io
    name: user1
  - kind: User
    apiGroup: rbac.authorization.k8s.io
    name: user2
  - kind: User
    apiGroup: rbac.authorization.k8s.io
    name: user3
  - kind: User
    apiGroup: rbac.authorization.k8s.io
    name: user4
  - kind: User
    apiGroup: rbac.authorization.k8s.io
    name: user5
  - kind: User
    apiGroup: rbac.authorization.k8s.io
    name: user6
  - kind: User
    apiGroup: rbac.authorization.k8s.io
    name: user7
  - kind: User
    apiGroup: rbac.authorization.k8s.io
    name: user8
  - kind: User
    apiGroup: rbac.authorization.k8s.io
    name: user9
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ns-role

